language: minimal

sudo: false

env:
  global:
    # Doctr deploy key for ioos/ioos-python-package-skeleton
    - secure: "cxYSJ95MLPQd6hSkAAklHRKTTu0sp8nYUJpjhLg5HeULrmpbYjY3SfZMw7X2kbjxA4hPPldmPjIGouWQWi0J6gLXL+zaelS+lw6Y7a6yfy3nI2tRk0ddDZL670DWRdWtYrzrSfiS3i+cP6jkj636UDUj/glPe8PyB/Q4MQ1zIMV71unqkICuEDKFLPY2oeZ3Ue0fMdF8KlYfvWsvb6FcAq/wp2oPfLLE7nOLl4A6ygDxEsK9SVymQiJtnTMfQUYP2PmvMGQX3FwmiMBrSmIFS48Cc6SRfQmpI3o/KNaV+299d/6UWtR0aZcwFx8G8uH1oYvx5zxAj/YCzuyX6qR47zpL2or5H29rfyDJhabOsBOJAugJrRrMvWlSqlkEhtStrBFqnjaFPlgddE/rJGn0gQxcAVGLRatu02RAuaBDXFazWDIFiR3bzGpVUZusyzmZLtojDoPjPNWsH9whaij+zqss95ZPpDbWZreFzGAohI3M1nBXL2K07OkYjkzIJg2ASVat9EtdBZBnhEVnvA9lcv+9VsX4HmuXLmyUqPfNBlU6a+ii0bJPb2XhBhzWaWpLEhetxuM+AzR1V77X6sJXpJEktU2zrk/bgfn3ekzXvd6fnAmnkjsJw9eHMW6woKCM1inRFIst6isf/KCgo+8tICwx4VQzQg9uF5lDW66WtMI="

matrix:
  fast_finish: true
  include:
    - name: "python-3.6"
      env: PY=3.6
    - name: "python-3.8"
      env: PY=3.8
    - name: "coding_standards"
      env: PY=3
    - name: "tarball"
      env: PY=3
    - name: "docs"
      env: PY=3

before_install:
  # Install miniconda and create TEST env.
  - |
    wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
    bash miniconda.sh -b -p $HOME/miniconda
    export PATH="$HOME/miniconda/bin:$PATH"
    conda config --set always_yes yes --set changeps1 no --set show_channel_urls true
    conda update --quiet conda
    conda config --add channels conda-forge --force
    conda config --set channel_priority strict
    conda config --set safety_checks disabled
    conda create --name TEST python=$PY --file requirements.txt --file requirements-dev.txt
    source activate TEST
    conda info --all

install:
  - pip install -e . --no-deps --force-reinstall

script:
  - if [[ $TRAVIS_JOB_NAME == python-* ]]; then
      cp -r tests/ /tmp ;
      pushd /tmp && pytest -n 2 -rxs --cov=ioos_pkg_skeleton tests && popd ;
    fi

  - if [[ $TRAVIS_JOB_NAME == 'tarball' ]]; then
      pip wheel . -w dist --no-deps ;
      check-manifest --verbose ;
      twine check dist/* ;
    fi

  - if [[ $TRAVIS_JOB_NAME == 'coding_standards' ]]; then
      pytest --flake8 -m flake8 ;
    fi

  - |
    if [[ $TRAVIS_JOB_NAME == 'docs' ]]; then
      set -e
      cp notebooks/tutorial.ipynb docs/source/
      pushd docs
      make clean html linkcheck
      popd
      if [[ -z "$TRAVIS_TAG" ]]; then
        python -m doctr deploy --build-tags --key-path github_deploy_key.enc --built-docs docs/build/html dev
      else
        python -m doctr deploy --build-tags --key-path github_deploy_key.enc --built-docs docs/build/html "version-$TRAVIS_TAG"
        python -m doctr deploy --build-tags --key-path github_deploy_key.enc --built-docs docs/build/html .
      fi
    fi
